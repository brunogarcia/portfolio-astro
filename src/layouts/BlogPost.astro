---
import type { CollectionEntry } from "astro:content";

import BaseLayout from "./Base.astro";
import BlogHero from "@/components/blog/Hero";

interface Props {
	post: CollectionEntry<"post">;
}

const { post } = Astro.props;
const {
	data: { title, description, ogImage, publishDate },
	slug,
} = post;
const socialImage = ogImage ?? `/og-image/${slug}.png`;
const articleDate = publishDate.toISOString();
---

<script>
	const scrollBtn = document.getElementById("to-top-btn") as HTMLButtonElement;
	const targetHeader = document.getElementById("blog-hero") as HTMLDivElement;

	function callback(entries: IntersectionObserverEntry[]) {
		entries.forEach((entry) => {
			// only show the scroll to top button when the heading is out of view
			scrollBtn.dataset.show = (!entry.isIntersecting).toString();
		});
	}

	scrollBtn.addEventListener("click", () => {
		document.documentElement.scrollTo({ top: 0, behavior: "smooth" });
	});

	const observer = new IntersectionObserver(callback);
	observer.observe(targetHeader);
</script>

<BaseLayout meta={{ title, description, articleDate, ogImage: socialImage }}>
	<div class="flex items-start gap-x-10">
		<article class="flex-grow break-words">
			<div id="blog-hero"><BlogHero content={post} /></div>
			<div
				class="prose prose-sm prose-cactus mt-12 prose-headings:font-semibold prose-headings:before:absolute prose-headings:before:-ml-4 prose-headings:before:text-accent prose-headings:before:content-['#'] prose-th:before:content-none"
			>
				<slot />
			</div>
		</article>
	</div>
</BaseLayout>
